#!/bin/bash

#modules="gconf ext types dag taskdep dagutils filepath filetype modname hier filesystem expr pp utils helper process findlibConf prog dependencies target project meta dist analyze sdist doc configure install prepare buildprogs build init exception help obuild"
libs="unix.cmxa"
OCAMLOPT="ocamlopt.opt -g"

libmodules="gconf ext types dag taskdep dagutils filepath filetype modname hier filesystem expr pp utils helper process findlibConf prog dependencies target project meta dist analyze configure prepare buildprogs build exception"
mainmodules="sdist doc init help install main"

set -e 

########################################################################
########################################################################
########################################################################
# build the library
cd obuild
rm -f *.cmi *.cmx *.o

APPEND=""
for mod in $libmodules
do
	echo "COMPILING $mod"
	$OCAMLOPT -for-pack Obuild -c ${mod}.ml
	APPEND+="obuild/${mod}.cmx "
done;
cd ..
echo "BUILDING library obuild.cmxa"
$OCAMLOPT -pack -o obuild.cmx $APPEND
$OCAMLOPT -a -o obuild.cmxa obuild.cmx

# then bootstrap the main executable
cd src
APPEND=""
for mod in $mainmodules
do
	echo "COMPILING $mod"
	$OCAMLOPT -I ../ -c ${mod}.ml
	APPEND+="${mod}.cmx "
done
echo "LINKING obuild.bootstrap"
$OCAMLOPT -o ../obuild.bootstrap -I ../ ${libs} obuild.cmxa $APPEND
cd ..

rm -f obuild/*.cmi obuild/*.cmx obuild/*.o
rm -f src/*.cmi src/*.cmx src/*.o
rm -f *.cmi *.o *a *.cmx *.cmxa
########################################################################
########################################################################
########################################################################

# rebuild everything with the bootstraped version
export OCAMLRUNPARAM=b
./obuild.bootstrap clean
./obuild.bootstrap configure
time ./obuild.bootstrap build
if [ -x dist/build/obuild/obuild ]; then
	rm obuild.bootstrap
fi
